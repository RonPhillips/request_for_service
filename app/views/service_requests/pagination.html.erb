<%= error_messages_for 'survey' %>
<h1>Surveys in </h1>
<div style='clear:both'>
    <% form_tag "/no_op/" , :method=>'get', :id=>'search_composer' do -%>
    <fieldset style='float:left'>
        <legend>
            Find a Survey <a href="#" id="dialog_link" class="ui-state-default ui-corner-all">How To Search</a>
        </legend>
        <div id='bounds_setter'>
            <!--TODO: change the default to match the page-->Find surveys 
            where the primary or secondary road contains a term like: <%= text_field_tag 'qs_location' ,session[:term_bounds].split('_').join(' ') %>
            &nbsp; 
            <br/>
            or it lies within shown Map Limits (Click "Limits On/Off" on map to set limits)<%= submit_tag 'Go!' %><input type="button" value="Clear Form!" id='button_clear' />
            <br/>
            <span id='searchlink'>New search url: <%= link_to surveys_path %>
            </span>
        </div>
    </fieldset>
    <%end -%><%# "end of form" %>
    <fieldset style='float:left'>
        <legend>
            Download all results as:
        </legend>
        <%= link_to('XML database', {:controller=>'surveys',
        :action=>'index',
        :term_bounds=>session[:term_bounds],
        :lat_min=>url_gcs(session[:lat_min]),
        :lat_max=>url_gcs(session[:lat_max]),
        :lng_min=>url_gcs(session[:lng_min]),
        :lng_max=>url_gcs(session[:lng_max]),
        :format => 'xml'}) %>
    </fieldset>
</div>
<div style="clear:both">
    &nbsp;
</div>
<div id='pagesmenu' style='float:left;'>
    <ul>
        <%for location in session[:communities] %>
        <% if (location == session[:community]) %>
        <li>
            <p>
                <%= location %>
            </p>
            <ul>
                <% (1..@pager.number_of_pages).each do |i| %>
                <%if i == @page_o_surveys.number %>
                <li class='current'>
                    <p>
                        <%= h(@page_labels[i][0..25]) %>
                    </p>
                </li>
                <%else %>
                <li>
                    <%= link_to(h(@page_labels[i][0..25]), {:controller=>'surveys',
                    :action=>'index',
                    :term_bounds=>session[:term_bounds],
                    :lat_min=>url_gcs(session[:lat_min]),
                    :lat_max=>url_gcs(session[:lat_max]),
                    :lng_min=>url_gcs(session[:lng_min]),
                    :lng_max=>url_gcs(session[:lng_max]),
                    :page => i,
                    :community=>location}, {:title=>@page_labels[i]}) %>
                </li>
                <%end -%>
                <%end %>
            </ul>
        </li>
        <%else %>
        <li>
            <%= link_to(h(location[0..25]), {:controller=>'surveys',
            :action=>'index',
            :term_bounds=>session[:term_bounds],
            :lat_min=>url_gcs(session[:lat_min]),
            :lat_max=>url_gcs(session[:lat_max]),
            :lng_min=>url_gcs(session[:lng_min]),
            :lng_max=>url_gcs(session[:lng_max]),
            :community=>location}, {:title=>location+" all pages"}) %>
        </li>
        <%end -%>
        <%end -%>
    </ul>
</div>
<div id='result_index' style='float:left;' class='green'>
    <table id='index_table'>
        <thead>
            <!--[reflection:surveys]-->
            <tr>
                <th>
                    Mark
                </th>
                <th>
                    Primary Road
                </th>
                <th>
                    Secondary Road
                </th>
                <th>
                    Near Intersection
                </th>
                <th>
                    Survey
                </th>
            </tr>
        </thead>
        <tbody>
            <% @page_o_surveys.each_with_index do |survey, i| %>
            <%if survey.indicator_latitude.nil? || survey.indicator_latitude<38 %>
            <tr id = 'index_table_row_<%=i%>' style="background-color:#ddd;">
            <%else -%>
            <tr id = 'index_table_row_<%=i%>' style="cursor:pointer;">
                <%end -%>
                <td>
                    <%=i %>
                </td>
                <td>
                    <%=h(default_format(survey,'primary_road')) %>
                </td>
                <td>
                    <%=h default_format(survey,'secondary_road') %>
                </td>
                <td>
                    <%=h(default_format(survey,'near_intersection')) %>
                </td>
                <td>
                    <%= link_to(default_format(survey, 'survey_identifier'), :controller=>'surveys', :action=>'show', :id=>survey.id) %>
                </td>
            </tr>
            <% end %><!--[eoreflection:surveys]-->
        </tbody>
    </table>
</div>
<!--end of result_index-->
<div id='map' style='float:left; width:412px; height:667px; margin:10px;'>
</div>
<!-- ui-dialog -->
<div id="dialog" title="Search Help" style='display:none;'>
    <h3>You can search by two methods -- Title and Map. </h3>
    <P>
        There are two ways to 
        use the application: geographic search and text search. 
    </P>
    <P>
        To use the geographic
        search:
    </P>
    <OL>
        <LI>
            <P>
                On the map &ndash; 
                click on &ldquo;Limits on/off&rdquo; to turn the search box on. 
            </P>
        </LI>
        <LI>
            <P>
                Adjust the search 
                box by &ldquo;grabbing&rdquo; the red balloons at the corners and  
                dragging them to your area of interest &ndash; you may need to do a 
                combination of zooming and adjusting the box to the area of  
                interest. 
            </P>
        </LI>
        <LI>
            <P>
                Once the area is 
                defined &ndash; click &rdquo;GO&rdquo;&nbsp; to see a list of  
                available documents 
            </P>
        </LI>
        <LI>
            <P>
                Click on the number 
                of the survey in the &ldquo;box&rdquo; that you are interested  
                in to view (and/or Print/Save) 
            </P>
        </LI>
        <LI>
        <P>
            At present only 
            about 30% of the documents are mapped &ndash; so be sure to use the  
            &ldquo;TEXT&rdquo; search 
        </P>
    </OL>
    <P>
        To use the text
        search:
    </P>
    <OL>
        <LI>
            <P>
                Simply type part 
                of the name of the roads around the survey you are looking for in the box in the  
                first line and click &ldquo;GO&rdquo;. 
            </P>
        </LI>
        <LI>
        <P>
            Note: this is an 
            &ldquo;OR&rdquo; search between terms, which means if you enter  
            &ldquo;hill&rdquo; and &ldquo;rolling&rdquo; &nbsp;you will get 
            every survey with &ldquo;hill&rdquo; or &ldquo;rolling&rdquo; in  
            the roads around it&ndash; not just those on &ldquo;Rolling Hills Road&rdquo; 
        </P>
        </li>
    </OL>
    <P>
        <SPAN LANG="en">The
            results are displayed alphabetically by community in pages of 50 &ndash; to switch
            communities, click on a community. To switch pages, click on a page under the community</SPAN>
    </P>
</div>


<script type="text/javascript">
    //<![CDATA[
    //initialize variables from the server
    <% if session[:lat_min] == '_' -%>
    	var lats = [40.9, 41.36];
    	var lngs = [-81.69,-81.385];
    	var is_geo_result = false;
    <% else %>
    	var lats = [<%=session[:lat_min]%>, <%=session[:lat_max]%>];
    	var lngs = [<%=session[:lng_min]%>, <%=session[:lng_max]%>];
    	var is_geo_result = true;
    <%end -%>
    var current_page = <%= @page_o_surveys.number %>;
    var total_pages = <%= @pager.number_of_pages %>
    var locations = eval('<%= @json %>');
    var page_labels = eval('(<%= ActiveSupport::JSON.encode(@page_labels)%>)')
    var base_url = '<%=BASE_URL%>'
    
    
    //////////////////////////////////
    // The rest is typical jQuery
    //////////////////////////////////
    
    $(document).ready(function(){
    	//initialize the active components
    	var imap = SCE.IndexMap;
        imap.MapObject.Initialize(base_url,'map')
    	imap.TableObject.Initialize('index_table')
    	//searchComposer binds the page components to the lat, lon data
    	sc = SCE.SearchComposer.Initialize(
    		base_url,
    		{
    		'min_lat':lats[0],
    	 	'max_lat':lats[1], 
    	 	'min_lng':lngs[0], 
    	 	'max_lng':lngs[1],
    		'has_box':is_geo_result
    		},
    	 	$('#qs_location')[0].value
    		);
    	//SearchBox is the box on the map -- returns a report of its corners, and
    	//calls a callback function when it is coded to do so.
        SCE.SearchBox.Initialize(
    		imap,
    		{
    			box_min_lat:lats[0], 
    			box_min_lng:lngs[0], 
    			box_max_lat:lats[1], 
    			box_max_lng:lngs[1]
    		}, 
    		function(){updateSearchUrl();}
    	);
    	$('#dialog').show();
    	// Dialog			
    		$('#dialog').dialog({
    			autoOpen: false,
    			width: 600,
    			buttons: {
    				"Ok": function() { 
    					$(this).dialog("close"); 
    				}
    			}
    		});
    		
    		// Dialog Link
    		$('#dialog_link').click(function(){
    			$('#dialog').dialog('open');
    			return false;
    		});
    
        var map = imap.MapObject;
        map.addControl(new GSmallMapControl());
        map.disableDoubleClickZoom();
    	$.each(locations, function(location_index, location){
    		var $txt = $('#index_table_row_' + location[0]+ '>td');
    		imap.createMarkers(location[0], location[1], location[2], '<p>'+ $txt[1].innerHTML +' :: '+$txt[2].innerHTML+'<\/p>');
    	});
    	//bind the local control events 
    	 $('#qs_location').bind('keyup', updateSearchUrl)
    	 $('#button_clear').bind('click', function(){
    	 	$('#qs_location')[0].value = ''
    		SCE.SearchBox.TurnOff();
    		$('#scope_improvements').click()
    		updateSearchUrl();
    	 })
    	// provide some page-specific routines
    
    	function currentUrlString(){
    	 	sc.updateTerms($('#qs_location')[0].value);
    		sc.updateCorners(SCE.SearchBox.Report())
        	var destination = 'surveys\/'
    		var txt = sc.base_url + destination + sc.readURL();
    		return txt;
    	};
    	 
    	function updateSearchUrl(){
    		var txt = currentUrlString();
    		$('#search_composer').attr('action', txt);
    		$('#searchlink').html("New search url: <a href='" + txt+ "'>" + txt  + "<\/a><\/p>")
    		$('#searchlink').effect('highlight',{'color':'#057aaf'}, 800);
    	};
    	//if it was a geo_search, turn on the box
    	if(is_geo_result){
    		SCE.SearchBox.TurnOn();
    	}
    	//start it up with a url in place:
    	updateSearchUrl();
    
    });
    //]]>
</script>
